# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: CI

permissions:
    contents: read

on:
    push:
    pull_request:
        types: [opened, reopened]

env:
    PYTHON_VERSION: 3.13
    POETRY_VERSION: 1.8.5

jobs:
    test:
        strategy:
            fail-fast: false
            matrix:
                python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
                os: [ubuntu-latest, windows-latest]

        env:
            TOXENV: ${{ matrix.python-version }}
        runs-on: ${{ matrix.os }}
        steps:
            - uses: actions/checkout@v4

            - name: Install ffmpeg & other dependencies on Ubuntu
              if: matrix.os == 'ubuntu-latest'
              run: |
                  sudo apt update
                  sudo apt install -y ffmpeg

            - name: Install ffmpeg & other dependencies on Windows
              if: matrix.os == 'windows-latest'
              run: |
                  choco install ffmpeg

            - name: Setup pipx environment Variables
              id: pipx-env-setup
              # pipx default home and bin dir are not writable by the cache action
              # so override them here and add the bin dir to PATH for later steps.
              run: |
                  SEP="${{ !startsWith(runner.os, 'windows') && '/' || '\\' }}"
                  PIPX_CACHE="${{ github.workspace }}${SEP}pipx_cache"
                  echo "pipx-cache-path=${PIPX_CACHE}" >> $GITHUB_OUTPUT
                  echo "pipx-version=$(pipx --version)" >> $GITHUB_OUTPUT
                  echo "PIPX_HOME=${PIPX_CACHE}${SEP}home" >> $GITHUB_ENV
                  echo "PIPX_BIN_DIR=${PIPX_CACHE}${SEP}bin" >> $GITHUB_ENV
                  echo "PIPX_MAN_DIR=${PIPX_CACHE}${SEP}man" >> $GITHUB_ENV
                  echo "${PIPX_CACHE}${SEP}bin" >> $GITHUB_PATH
              shell: bash

            - name: Cache Pipx
              id: cache-pipx
              uses: actions/cache@v4
              with:
                  path: ${{ steps.pipx-env-setup.outputs.pipx-cache-path }}
                  key: ${{ runner.os }}-python_${{ env.PYTHON_VERSION }}-pipx_${{ steps.pipx-env-setup.outputs.pipx-version }}-poetry_${{ env.POETRY_VERSION }}

            - name: Install Poetry & Tox
              if: steps.cache-pipx.outputs.cache-hit != 'true'
              run: |
                  pipx install poetry==${{ env.POETRY_VERSION }}
                  pipx install tox

            - name: Setup Python ${{ env.PYTHON_VERSION }}
              uses: actions/setup-python@v5
              with:
                  python-version: ${{ env.PYTHON_VERSION }}
                  cache: poetry

            - name: Setup Tox Bnvironment Variables
              id: tox-env-setup
              # pipx default home and bin dir are not writable by the cache action
              # so override them here and add the bin dir to PATH for later steps.
              run: |
                  SEP="${{ !startsWith(runner.os, 'windows') && '/' || '\\' }}"
                  TOX_CACHE="${{ github.workspace }}${SEP}.tox"
                  echo "tox-cache-path=${TOX_CACHE}" >> $GITHUB_OUTPUT

            - name: Cache Tox
              id: cache-tox
              uses: actions/cache@v4
              with:
                  path: ${{ steps.tox-env-setup.outputs.tox-cache-path }}
                  key: ${{ runner.os }}-python_${{ env.PYTHON_VERSION }}-pipx_${{ steps.pipx-env-setup.outputs.pipx-version }}-poetry_${{ env.POETRY_VERSION }}-pyproject_${{ hashFiles('pyproject.yaml') }}

            - name: Run tox
              run: |
                  tox --discover $(which python)
              shell: bash

    lint:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Setup pipx environment Variables
              id: pipx-env-setup
              # pipx default home and bin dir are not writable by the cache action
              # so override them here and add the bin dir to PATH for later steps.
              run: |
                  SEP="${{ !startsWith(runner.os, 'windows') && '/' || '\\' }}"
                  PIPX_CACHE="${{ github.workspace }}${SEP}pipx_cache"
                  echo "pipx-cache-path=${PIPX_CACHE}" >> $GITHUB_OUTPUT
                  echo "pipx-version=$(pipx --version)" >> $GITHUB_OUTPUT
                  echo "PIPX_HOME=${PIPX_CACHE}${SEP}home" >> $GITHUB_ENV
                  echo "PIPX_BIN_DIR=${PIPX_CACHE}${SEP}bin" >> $GITHUB_ENV
                  echo "PIPX_MAN_DIR=${PIPX_CACHE}${SEP}man" >> $GITHUB_ENV
                  echo "${PIPX_CACHE}${SEP}bin" >> $GITHUB_PATH
              shell: bash

            - name: Cache Pipx
              id: cache-pipx
              uses: actions/cache@v4
              with:
                  path: ${{ steps.pipx-env-setup.outputs.pipx-cache-path }}
                  key: ${{ runner.os }}-python_${{ env.PYTHON_VERSION }}-pipx_${{ steps.pipx-env-setup.outputs.pipx-version }}-poetry_${{ env.POETRY_VERSION }}

            - name: Install Poetry & Tox
              if: steps.cache-pipx.outputs.cache-hit != 'true'
              run: |
                  pipx install poetry==${{ env.POETRY_VERSION }}
                  pipx install tox

            - name: Setup Python ${{ env.PYTHON_VERSION }}
              uses: actions/setup-python@v5
              with:
                  python-version: ${{ env.PYTHON_VERSION }}
                  cache: poetry

            - name: Check Ruff (Lint & Format) & mypy
              if: always()
              run: tox -p -e lint,format,mypy
